<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Penguin.Reflection.Abstractions</name>
    </assembly>
    <members>
        <member name="T:Penguin.Reflection.Abstractions.AttributeInstance">
            <summary>
            An instance of an attribute
            </summary>
        </member>
        <member name="P:Penguin.Reflection.Abstractions.AttributeInstance.DeclaringMember">
            <summary>
            The type/property that this was declared on
            </summary>
        </member>
        <member name="P:Penguin.Reflection.Abstractions.AttributeInstance.Instance">
            <summary>
            And instantiated version of the attribute
            </summary>
        </member>
        <member name="P:Penguin.Reflection.Abstractions.AttributeInstance.IsInherited">
            <summary>
            Is this attribute defined on a parent type/overridden property from where it was retrieved?
            </summary>
        </member>
        <member name="M:Penguin.Reflection.Abstractions.AttributeInstance.#ctor(System.Reflection.MemberInfo,System.Attribute,System.Boolean)">
            <summary>
            Constructs a new instance
            </summary>
            <param name="declaringMember">Where the attribute was declared</param>
            <param name="instance">An instance of this attribute</param>
            <param name="isInherited">Is this attribute defined on a parent type/overridden property from where it was retrieved?</param>
        </member>
        <member name="T:Penguin.Reflection.Abstractions.CoreType">
            <summary>
            The simplest usable unit of a type check
            </summary>
        </member>
        <member name="F:Penguin.Reflection.Abstractions.CoreType.Null">
            <summary>
            The type is null and cant be resolved
            </summary>
        </member>
        <member name="F:Penguin.Reflection.Abstractions.CoreType.Collection">
            <summary>
            Any Collection, Array, List, etc.
            </summary>
        </member>
        <member name="F:Penguin.Reflection.Abstractions.CoreType.Dictionary">
            <summary>
            Any kind of dictionary
            </summary>
        </member>
        <member name="F:Penguin.Reflection.Abstractions.CoreType.Value">
            <summary>
            A value type or anything that could easily be serialized into a single field
            </summary>
        </member>
        <member name="F:Penguin.Reflection.Abstractions.CoreType.Reference">
            <summary>
            Any type that contains sub-properties and is best shown as a tree of values
            </summary>
        </member>
        <member name="F:Penguin.Reflection.Abstractions.CoreType.Enum">
            <summary>
            An enumeration or selection type
            </summary>
        </member>
    </members>
</doc>